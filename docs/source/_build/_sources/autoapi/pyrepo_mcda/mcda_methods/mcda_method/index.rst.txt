:py:mod:`pyrepo_mcda.mcda_methods.mcda_method`
==============================================

.. py:module:: pyrepo_mcda.mcda_methods.mcda_method


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pyrepo_mcda.mcda_methods.mcda_method.MCDA_method




.. py:class:: MCDA_method

   Bases: :py:obj:`abc.ABC`

   Helper class that provides a standard way to create an ABC using
   inheritance.

   .. py:method:: __call__(self, matrix, weights, types)

      Score alternatives from decision matrix `matrix` using criteria weights `weights` and criteria types `types`

      :param matrix: decision matrix with performance values for m alternatives in rows and n criteria in columns
      :type matrix: ndarray
      :param weights: vector with criteria weights with size equal to number of columns n of `matrix`
      :type weights: ndarray
      :param types: vector with criteria types containing values of 1 for profit criteria and -1 for cost criteria
                    with size equal to number of columns n of `matrix`
      :type types: ndarray


   .. py:method:: _verify_input_data(matrix, weights, types)
      :staticmethod:



